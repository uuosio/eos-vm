TEST_CASE( "Testing wasm <int_literals_test_0_wasm>", "[int_literals_test_0_wasm_tests]" ) {
   auto code = backend_t::read_wasm( int_literals_test_0_wasm ) );
   backend_t bkend( code );
   bkend.set_wasm_allocator( &wa );

   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32.test", )) == static_cast<uint32_t>(195940365));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32.umax", )) == static_cast<uint32_t>(4294967295));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32.smax", )) == static_cast<uint32_t>(2147483647));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32.neg_smax", )) == static_cast<uint32_t>(2147483649));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32.smin", )) == static_cast<uint32_t>(2147483648));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32.alt_smin", )) == static_cast<uint32_t>(2147483648));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32.inc_smin", )) == static_cast<uint32_t>(2147483649));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32.neg_zero", )) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32.not_octal", )) == static_cast<uint32_t>(10));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32.unsigned_decimal", )) == static_cast<uint32_t>(4294967295));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32.plus_sign", )) == static_cast<uint32_t>(42));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64.test", )) == static_cast<uint64_t>(913028331277281902));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64.umax", )) == static_cast<uint64_t>(18446744073709551615));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64.smax", )) == static_cast<uint64_t>(9223372036854775807));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64.neg_smax", )) == static_cast<uint64_t>(9223372036854775809));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64.smin", )) == static_cast<uint64_t>(9223372036854775808));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64.alt_smin", )) == static_cast<uint64_t>(9223372036854775808));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64.inc_smin", )) == static_cast<uint64_t>(9223372036854775809));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64.neg_zero", )) == static_cast<uint64_t>(0));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64.not_octal", )) == static_cast<uint64_t>(10));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64.unsigned_decimal", )) == static_cast<uint64_t>(18446744073709551615));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64.plus_sign", )) == static_cast<uint64_t>(42));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32-dec-sep1", )) == static_cast<uint32_t>(1000000));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32-dec-sep2", )) == static_cast<uint32_t>(1000));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32-hex-sep1", )) == static_cast<uint32_t>(168755353));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "i32-hex-sep2", )) == static_cast<uint32_t>(109071));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64-dec-sep1", )) == static_cast<uint64_t>(1000000));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64-dec-sep2", )) == static_cast<uint64_t>(1000));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64-hex-sep1", )) == static_cast<uint64_t>(3078696982321561));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "i64-hex-sep2", )) == static_cast<uint64_t>(109071));
}

