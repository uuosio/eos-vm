TEST_CASE( "Testing wasm <local_set_test_0_wasm>", "[local_set_test_0_wasm_tests]" ) {
   auto code = backend_t::read_wasm( local_set_test_0_wasm ) );
   backend_t bkend( code );
   bkend.set_wasm_allocator( &wa );

   CHECK(!bkend.call_with_return(nullptr, "env", "type-local-i32", )));
   CHECK(!bkend.call_with_return(nullptr, "env", "type-local-i64", )));
   CHECK(!bkend.call_with_return(nullptr, "env", "type-local-f32", )));
   CHECK(!bkend.call_with_return(nullptr, "env", "type-local-f64", )));
   CHECK(!bkend.call_with_return(nullptr, "env", "type-param-i32", static_cast<uint32_t>(2))));
   CHECK(!bkend.call_with_return(nullptr, "env", "type-param-i64", static_cast<uint64_t>(3))));
   CHECK(!bkend.call_with_return(nullptr, "env", "type-param-f32", static_cast<float>(1082969293))));
   CHECK(!bkend.call_with_return(nullptr, "env", "type-param-f64", static_cast<double>(4617878467915022336))));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-block-value", static_cast<uint32_t>(0))));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-loop-value", static_cast<uint32_t>(0))));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-br-value", static_cast<uint32_t>(0))));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-br_if-value", static_cast<uint32_t>(0))));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-br_if-value-cond", static_cast<uint32_t>(0))));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-br_table-value", static_cast<uint32_t>(0))));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-return-value", static_cast<uint32_t>(0))));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-if-then", static_cast<uint32_t>(1))));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-if-else", static_cast<uint32_t>(0))));
   CHECK(!bkend.call_with_return(nullptr, "env", "type-mixed", static_cast<uint64_t>(1), static_cast<float>(1074580685), static_cast<double>(4614613358185178726), static_cast<uint32_t>(4), static_cast<uint32_t>(5), )));
   CHECK(to_i64(*bkend.call_with_return(nullptr, "env", "write", static_cast<uint64_t>(1), static_cast<float>(1073741824), static_cast<double>(4614613358185178726), static_cast<uint32_t>(4), static_cast<uint32_t>(5), )) == static_cast<uint64_t>(56));
}

