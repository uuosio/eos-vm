TEST_CASE( "Testing wasm <if_test_0_wasm>", "[if_test_0_wasm_tests]" ) {
   auto code = backend_t::read_wasm( if_test_0_wasm ) );
   backend_t bkend( code );
   bkend.set_wasm_allocator( &wa );

   CHECK(!bkend.call_with_return(nullptr, "env", "empty", static_cast<uint32_t>(0))));
   CHECK(!bkend.call_with_return(nullptr, "env", "empty", static_cast<uint32_t>(1))));
   CHECK(!bkend.call_with_return(nullptr, "env", "empty", static_cast<uint32_t>(100))));
   CHECK(!bkend.call_with_return(nullptr, "env", "empty", static_cast<uint32_t>(4294967294))));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "singular", static_cast<uint32_t>(0))) == static_cast<uint32_t>(8));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "singular", static_cast<uint32_t>(1))) == static_cast<uint32_t>(7));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "singular", static_cast<uint32_t>(10))) == static_cast<uint32_t>(7));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "singular", static_cast<uint32_t>(4294967286))) == static_cast<uint32_t>(7));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "multi", static_cast<uint32_t>(0))) == static_cast<uint32_t>(9));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "multi", static_cast<uint32_t>(1))) == static_cast<uint32_t>(8));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "multi", static_cast<uint32_t>(13))) == static_cast<uint32_t>(8));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "multi", static_cast<uint32_t>(4294967291))) == static_cast<uint32_t>(8));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "nested", static_cast<uint32_t>(0), static_cast<uint32_t>(0), )) == static_cast<uint32_t>(11));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "nested", static_cast<uint32_t>(1), static_cast<uint32_t>(0), )) == static_cast<uint32_t>(10));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "nested", static_cast<uint32_t>(0), static_cast<uint32_t>(1), )) == static_cast<uint32_t>(10));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "nested", static_cast<uint32_t>(3), static_cast<uint32_t>(2), )) == static_cast<uint32_t>(9));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "nested", static_cast<uint32_t>(0), static_cast<uint32_t>(4294967196), )) == static_cast<uint32_t>(10));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "nested", static_cast<uint32_t>(10), static_cast<uint32_t>(10), )) == static_cast<uint32_t>(9));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "nested", static_cast<uint32_t>(0), static_cast<uint32_t>(4294967295), )) == static_cast<uint32_t>(10));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "nested", static_cast<uint32_t>(4294967185), static_cast<uint32_t>(4294967294), )) == static_cast<uint32_t>(9));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-select-first", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-select-first", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-select-mid", static_cast<uint32_t>(0))) == static_cast<uint32_t>(2));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-select-mid", static_cast<uint32_t>(1))) == static_cast<uint32_t>(2));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-select-last", static_cast<uint32_t>(0))) == static_cast<uint32_t>(3));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-select-last", static_cast<uint32_t>(1))) == static_cast<uint32_t>(2));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-loop-first", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-loop-first", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-loop-mid", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-loop-mid", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-loop-last", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-loop-last", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-if-condition", static_cast<uint32_t>(0))) == static_cast<uint32_t>(3));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-if-condition", static_cast<uint32_t>(1))) == static_cast<uint32_t>(2));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br_if-first", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br_if-first", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br_if-last", static_cast<uint32_t>(0))) == static_cast<uint32_t>(3));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br_if-last", static_cast<uint32_t>(1))) == static_cast<uint32_t>(2));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br_table-first", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br_table-first", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br_table-last", static_cast<uint32_t>(0))) == static_cast<uint32_t>(2));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br_table-last", static_cast<uint32_t>(1))) == static_cast<uint32_t>(2));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-call_indirect-first", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-call_indirect-first", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-call_indirect-mid", static_cast<uint32_t>(0))) == static_cast<uint32_t>(2));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-call_indirect-mid", static_cast<uint32_t>(1))) == static_cast<uint32_t>(2));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-call_indirect-last", static_cast<uint32_t>(0))) == static_cast<uint32_t>(2));
   CHECK_THROWS_AS(bkend(nullptr, "env", "as-call_indirect-last", static_cast<uint32_t>(1)), std::exception);
   CHECK(!bkend.call_with_return(nullptr, "env", "as-store-first", static_cast<uint32_t>(0))));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-store-first", static_cast<uint32_t>(1))));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-store-last", static_cast<uint32_t>(0))));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-store-last", static_cast<uint32_t>(1))));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-memory.grow-value", static_cast<uint32_t>(0))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-memory.grow-value", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-call-value", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-call-value", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-return-value", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-return-value", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-drop-operand", static_cast<uint32_t>(0))));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-drop-operand", static_cast<uint32_t>(1))));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br-value", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br-value", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-local.set-value", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-local.set-value", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-local.tee-value", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-local.tee-value", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-global.set-value", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-global.set-value", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-load-operand", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-load-operand", static_cast<uint32_t>(1))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-unary-operand", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-unary-operand", static_cast<uint32_t>(1))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-unary-operand", static_cast<uint32_t>(4294967295))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-binary-operand", static_cast<uint32_t>(0), static_cast<uint32_t>(0), )) == static_cast<uint32_t>(15));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-binary-operand", static_cast<uint32_t>(0), static_cast<uint32_t>(1), )) == static_cast<uint32_t>(4294967284));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-binary-operand", static_cast<uint32_t>(1), static_cast<uint32_t>(0), )) == static_cast<uint32_t>(4294967281));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-binary-operand", static_cast<uint32_t>(1), static_cast<uint32_t>(1), )) == static_cast<uint32_t>(12));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-test-operand", static_cast<uint32_t>(0))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-test-operand", static_cast<uint32_t>(1))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-compare-operand", static_cast<uint32_t>(0), static_cast<uint32_t>(0), )) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-compare-operand", static_cast<uint32_t>(0), static_cast<uint32_t>(1), )) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-compare-operand", static_cast<uint32_t>(1), static_cast<uint32_t>(0), )) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-compare-operand", static_cast<uint32_t>(1), static_cast<uint32_t>(1), )) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "break-bare", )) == static_cast<uint32_t>(19));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "break-value", static_cast<uint32_t>(1))) == static_cast<uint32_t>(18));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "break-value", static_cast<uint32_t>(0))) == static_cast<uint32_t>(21));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "effects", static_cast<uint32_t>(1))) == static_cast<uint32_t>(4294967282));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "effects", static_cast<uint32_t>(0))) == static_cast<uint32_t>(4294967290));
}

