TEST_CASE( "Testing wasm <memory_grow_test_0_wasm>", "[memory_grow_test_0_wasm_tests]" ) {
   auto code = backend_t::read_wasm( memory_grow_test_0_wasm ) );
   backend_t bkend( code );
   bkend.set_wasm_allocator( &wa );

   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "size", )) == static_cast<uint32_t>(0));
   CHECK_THROWS_AS(bkend(nullptr, "env", "store_at_zero", ), std::exception);
   CHECK_THROWS_AS(bkend(nullptr, "env", "load_at_zero", ), std::exception);
   CHECK_THROWS_AS(bkend(nullptr, "env", "store_at_page_size", ), std::exception);
   CHECK_THROWS_AS(bkend(nullptr, "env", "load_at_page_size", ), std::exception);
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(1))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "size", )) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "load_at_zero", )) == static_cast<uint32_t>(0));
   CHECK(!bkend.call_with_return(nullptr, "env", "store_at_zero", )));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "load_at_zero", )) == static_cast<uint32_t>(2));
   CHECK_THROWS_AS(bkend(nullptr, "env", "store_at_page_size", ), std::exception);
   CHECK_THROWS_AS(bkend(nullptr, "env", "load_at_page_size", ), std::exception);
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(4))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "size", )) == static_cast<uint32_t>(5));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "load_at_zero", )) == static_cast<uint32_t>(2));
   CHECK(!bkend.call_with_return(nullptr, "env", "store_at_zero", )));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "load_at_zero", )) == static_cast<uint32_t>(2));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "load_at_page_size", )) == static_cast<uint32_t>(0));
   CHECK(!bkend.call_with_return(nullptr, "env", "store_at_page_size", )));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "load_at_page_size", )) == static_cast<uint32_t>(3));
}

TEST_CASE( "Testing wasm <memory_grow_test_1_wasm>", "[memory_grow_test_1_wasm_tests]" ) {
   auto code = backend_t::read_wasm( memory_grow_test_1_wasm ) );
   backend_t bkend( code );
   bkend.set_wasm_allocator( &wa );

   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(1))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(0))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(2))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(800))) == static_cast<uint32_t>(3));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(65536))) == static_cast<uint32_t>(4294967295));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(64736))) == static_cast<uint32_t>(4294967295));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(1))) == static_cast<uint32_t>(803));
}

TEST_CASE( "Testing wasm <memory_grow_test_2_wasm>", "[memory_grow_test_2_wasm_tests]" ) {
   auto code = backend_t::read_wasm( memory_grow_test_2_wasm ) );
   backend_t bkend( code );
   bkend.set_wasm_allocator( &wa );

   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(0))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(1))) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(2))) == static_cast<uint32_t>(2));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(6))) == static_cast<uint32_t>(4));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(0))) == static_cast<uint32_t>(10));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(1))) == static_cast<uint32_t>(4294967295));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(65536))) == static_cast<uint32_t>(4294967295));
}

TEST_CASE( "Testing wasm <memory_grow_test_3_wasm>", "[memory_grow_test_3_wasm_tests]" ) {
   auto code = backend_t::read_wasm( memory_grow_test_3_wasm ) );
   backend_t bkend( code );
   bkend.set_wasm_allocator( &wa );

   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "check-memory-zero", static_cast<uint32_t>(0), static_cast<uint32_t>(65535), )) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(1))) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "check-memory-zero", static_cast<uint32_t>(65536), static_cast<uint32_t>(131071), )) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(1))) == static_cast<uint32_t>(2));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "check-memory-zero", static_cast<uint32_t>(131072), static_cast<uint32_t>(196607), )) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(1))) == static_cast<uint32_t>(3));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "check-memory-zero", static_cast<uint32_t>(196608), static_cast<uint32_t>(262143), )) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(1))) == static_cast<uint32_t>(4));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "check-memory-zero", static_cast<uint32_t>(262144), static_cast<uint32_t>(327679), )) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "grow", static_cast<uint32_t>(1))) == static_cast<uint32_t>(5));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "check-memory-zero", static_cast<uint32_t>(327680), static_cast<uint32_t>(393215), )) == static_cast<uint32_t>(0));
}

TEST_CASE( "Testing wasm <memory_grow_test_4_wasm>", "[memory_grow_test_4_wasm_tests]" ) {
   auto code = backend_t::read_wasm( memory_grow_test_4_wasm ) );
   backend_t bkend( code );
   bkend.set_wasm_allocator( &wa );

   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br-value", )) == static_cast<uint32_t>(1));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-br_if-cond", )));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br_if-value", )) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br_if-value-cond", )) == static_cast<uint32_t>(6));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-br_table-index", )));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br_table-value", )) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-br_table-value-index", )) == static_cast<uint32_t>(6));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-return-value", )) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-if-cond", )) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-if-then", )) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-if-else", )) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-select-first", static_cast<uint32_t>(0), static_cast<uint32_t>(1), )) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-select-second", static_cast<uint32_t>(0), static_cast<uint32_t>(0), )) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-select-cond", )) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-call-first", )) == static_cast<uint32_t>(4294967295));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-call-mid", )) == static_cast<uint32_t>(4294967295));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-call-last", )) == static_cast<uint32_t>(4294967295));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-call_indirect-first", )) == static_cast<uint32_t>(4294967295));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-call_indirect-mid", )) == static_cast<uint32_t>(4294967295));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-call_indirect-last", )) == static_cast<uint32_t>(4294967295));
   CHECK_THROWS_AS(bkend(nullptr, "env", "as-call_indirect-index", ), std::exception);
   CHECK(!bkend.call_with_return(nullptr, "env", "as-local.set-value", )));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-local.tee-value", )) == static_cast<uint32_t>(1));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-global.set-value", )));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-load-address", )) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-loadN-address", )) == static_cast<uint32_t>(0));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-store-address", )));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-store-value", )));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-storeN-address", )));
   CHECK(!bkend.call_with_return(nullptr, "env", "as-storeN-value", )));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-unary-operand", )) == static_cast<uint32_t>(31));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-binary-left", )) == static_cast<uint32_t>(11));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-binary-right", )) == static_cast<uint32_t>(9));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-test-operand", )) == static_cast<uint32_t>(0));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-compare-left", )) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-compare-right", )) == static_cast<uint32_t>(1));
   CHECK(to_i32(*bkend.call_with_return(nullptr, "env", "as-memory.grow-size", )) == static_cast<uint32_t>(1));
}

